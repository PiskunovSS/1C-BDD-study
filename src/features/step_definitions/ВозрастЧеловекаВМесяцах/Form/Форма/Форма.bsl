//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДатаРожденияСотрудника(Парам01)","ДатаРожденияСотрудника","Допустим дата рождения сотрудника 22.02.1978");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ТекущаяДатаРавна(Парам01)","ТекущаяДатаРавна","и текущая дата равна 22.08.2016");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВозрастСотрудникаВМесяцахБудетРавен(Парам01)","ВозрастСотрудникаВМесяцахБудетРавен","Тогда возраст сотрудника в месяцах будет равен 462");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим дата рождения сотрудника 22.02.1978
//@ДатаРожденияСотрудника(Парам01)
Процедура ДатаРожденияСотрудника(ДатаРождения) Экспорт
	Контекст.Вставить("ДатаРождения", ДатаРождения);
КонецПроцедуры

&НаКлиенте
//и текущая дата равна 22.08.2016
//@ТекущаяДатаРавна(Парам01)
Процедура ТекущаяДатаРавна(ТекущаяДата) Экспорт
	Контекст.Вставить("ТекущаяДата", ТекущаяДата);
КонецПроцедуры

&НаКлиенте
//Тогда возраст сотрудника в месяцах будет равен 462
//@ВозрастСотрудникаВМесяцахБудетРавен(Парам01)
Процедура ВозрастСотрудникаВМесяцахБудетРавен(ОжидаемыйРезультат) Экспорт
	Результат = ОбщийМодуль1.РазностьДатВМесяцах(Контекст.ДатаРождения, Контекст.ТекущаяДата);
	Если не Результат = ОжидаемыйРезультат тогда
		ВызватьИсключение "Результат расчитан не верно";
	КонецЕсли;
КонецПроцедуры

//окончание текста модуля